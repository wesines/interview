kind: pipeline
name: continuous-integration

trigger:
    event:
        - pull_request

steps:
    - name: quality-checks
      image: node
      commands:
          - npm install
          - npm run lint
          - npm run format
          - npx tsc
          - npx prisma validate
          - npm run test
      environment:
          DATABASE_URL: postgresql://db:password@database:5432/db?schema=public

services:
    - name: database
      image: postgres:9-alpine
      environment:
          POSTGRES_USER: db
          POSTGRES_DB: password

---
kind: pipeline
type: docker
name: continuous-delivery

trigger:
    branch:
        - main
    event:
        - push

depends_on:
    - continuous-integration

steps:
    - name: build-image
      image: plugins/docker
      environment:
          DATABASE_URL:
              from_secret: database_url_${DRONE_TARGET_BRANCH}
      settings:
          registry: ghcr.io
          repo: ghcr.io/nw-tech/joule-interview-${DRONE_TARGET_BRANCH}
          username:
              from_secret: ghcr_username
          password:
              from_secret: ghcr_password
          dockerfile: Dockerfile
          build_args_from_env:
              - DATABASE_URL

    - name: deploy-image
      image: curlimages/curl:latest
      environment:
          WEBHOOK_URL:
              from_secret: webhook_url_${DRONE_TARGET_BRANCH}
      commands:
          - curl -X POST $WEBHOOK_URL
      depends_on:
          - build-image

    - name: deploy-migration
      image: node
      commands:
          - npx prisma migrate deploy
      environment:
          DATABASE_URL:
              from_secret: database_url_${DRONE_TARGET_BRANCH}
      depends_on:
          - deploy-image
